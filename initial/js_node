function friendlyNumber(number, options){
    // Default arguments
    options = options || {};
    var base = options.base || 1000;
    var decimals = options.decimals || 0;
    var suffix = options.suffix || "";
    var powers = options.powers || ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];
    return String(number);
}

if (!global.is_checking){
    // These "asserts" using only for self-checking and not necessary for auto-testing
    assert.equal(friendlyNumber(102), '102', '102');
    assert.equal(friendlyNumber(10240), '10k', '10k');
    assert.equal(friendlyNumber(12341234, {decimals: 1}), '12.3M', '12.3M');
    assert.equal(friendlyNumber(12461, {decimals: 1}), '12.5k', '12.5k');
    assert.equal(friendlyNumber(1024000000, {base: 1024, suffix: 'iB'}), '976MiB', '976MiB');
}
